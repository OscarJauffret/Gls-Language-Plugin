<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
    <!-- Unique identifier of the plugin. It should be FQN. It cannot be changed between the plugin versions. -->
    <id>com.gls.GlsLanguage</id>

    <!-- Public plugin name should be written in Title Case.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-name -->
    <name>Gilles Language</name>

    <!-- A displayed Vendor name or Organization ID displayed on the Plugins Page. -->
    <vendor email="oscarjauffret@gmail.com">Oscar Jauffret</vendor>

    <!-- Description of the plugin displayed on the Plugin Page and IDE Plugin Manager.
         Simple HTML elements (text formatting, paragraphs, and lists) can be added inside of <![CDATA[ ]]> tag.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-description -->
    <description><![CDATA[
    <h1>
      Gilles Language Plugin
    </h1>
    This plugin enhances the development experience for the custom Gilles language by providing features like syntax highlighting, custom file support, and more.

    <h2>Features</h2>
    <ul>
      <li>Syntax highlighting for easy readability</li>
      <li>Custom file type registration for .gls files</li>
      <li>Color settings customization for your code</li>
      <li>Error detection for cleaner code</li>
      <li>Code completion to speed up development</li>
      <li>Live templates for common code patterns</li>
      <li>Automatic code commenting</li>
      <li>Extension of the Gilles language with additional features</li>
    </ul>

    In addition to supporting the core features of the Gilles language, this plugin extends its functionality with:
    <ul>
      <li>Function definitions with the `FUNCTION` keyword</li>
      <li>Function calls</li>
      <li>Data types: `INT`, `BOOL`, `FLOAT`, and `LIST OF <type>`</li>
      <li>FOR loops for iterative operations</li>
      <li>Printing expressions directly without using a variable</li>
      <li>Additional comparison operators: `!=`, `>=`, and `>`</li>
      <li>`%` operator for modulo operations, with the same precedence as `*` and `/`</li>
      <li>AND, OR, and NOT logical operators</li>
      <li>TRUE and FALSE keywords for boolean values</li>
    </ul>

    <h3>Syntax for additional features</h3>
    <p><u>For loops</u></p>
    <code>FOR INT $Var$ = $Init$ TO $Expr$ REPEAT $Code$ END</code>
    <br>

    <p><u>Function definitions</u></p>
    <code>FUNCTION $ProgName$($ParamList$) RETURNS $Type$ $Code$ RETURN $Value$ END</code>
    <br>

    <p><u>Function calls</u></p>
    <code>$Variable$ = $FunctionName$($ArgList$)</code>
    <br>
    When calling a function, it is mandatory to assign the result to a variable or use it in an expression.
    <br>

    <p><u>Data types</u></p>
    <code>INT $VarName$ = $Value$</code>, <code>BOOL $VarName$ = $Value$</code>, <code>FLOAT $VarName$ = $Value$</code>, <code>LIST OF <type> $VarName$ = [$ValueList$]</code>
    <br>

    <p><u>Printing expressions</u></p>
    <code>OUT($Expression$)</code>
    <br>

    <br>
    <br>

    Please note that some code may not be identified as invalid by the plug-in because the plug-in does not run a full semantic analysis of the code.
    <h2>Live Templates</h2>
    Live templates make coding in Gilles faster by offering predefined code snippets. Just type the template name and press the Tab key to insert it.
    Currently available templates include:
    <ul>
      <li><code>prog</code> - Boilerplate for defining a new program</li>
      <li><code>func</code> - Boilerplate for defining a new function</li>
      <li><code>if</code> - Standard conditional block</li>
      <li><code>ifel</code> - Conditional block with an `else` statement</li>
      <li><code>ifs</code> - Surrounds the selected code with an `if` block</li>
      <li><code>while</code> - Loop structure for repeating actions</li>
      <li><code>for</code> - Iterative loop</li>

    </ul>

    <h2>
      Feedback and Support
    </h2>
    If you encounter any issues or have suggestions, feel free to submit them on our <a href="https://github.com/OscarJauffret/Gls-Language-Plugin/issues">GitHub page</a>
  ]]></description>

    <change-notes><![CDATA[
    <p><u>Version 2.1</u></p>
    <ul>
      <li>Fixed a bug with live templates</li>
    </ul>
    <p><u>Version 2.0</u></p>
    <ul>
      <li>Added support for function definitions and calls</li>
      <li>Added data types: INT, BOOL, FLOAT, and LIST OF <type></li>
      <li>Added logical operators: AND, OR, and NOT</li>
    </ul>
    <p><u>Version 1.2</u></p>
    <ul>
      <li>Added live templates and completion</li>
      <li>Extended syntax with FOR loops, comparison operators and %</li>
      <li>Added commenter</li>
      <li>Fixed an issue with valid program names and variable names not being recognized</li>
    </ul>
    <p><u>Version 1.1</u></p>
    <ul>
      <li>Fixed a bug with invalid tokens</li>
    </ul>
    <p><u>Version 1.0</u></p>
    <ul>
      <li>Added color settings page</li>
      <li>Added syntax highlighting</li>
      <li>Added error detection</li>
    </ul>
    ]]></change-notes>

    <!-- Product and plugin compatibility requirements.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html -->
    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.java</depends>

    <version>2.1</version>
    <idea-version since-build="232.1" until-build="243.*"/>

    <!-- Extension points defined by the plugin.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-extension-points.html -->
    <extensions defaultExtensionNs="com.intellij">
        <fileType name="Gilles"
                  implementationClass="com.gls.glsplugin.language.GillesFileType"
                  fieldName="INSTANCE"
                  language="Gilles"
                  extensions="gls"/>
        <lang.parserDefinition
                language="Gilles"
                implementationClass="com.gls.glsplugin.language.GillesParserDefinition"/>
        <lang.syntaxHighlighterFactory
                language="Gilles"
                implementationClass="com.gls.glsplugin.language.GillesSyntaxHighlighterFactory"/>
        <colorSettingsPage implementation="com.gls.glsplugin.language.GillesColorSettingsPage"/>
        <completion.contributor language="Gilles" implementationClass="com.gls.glsplugin.language.GillesCompletionContributor"/>
        <typedHandler implementation="com.gls.glsplugin.language.GillesTypedHandler" />
        <defaultLiveTemplates file="/liveTemplates/Gilles.xml"/>
        <liveTemplateContext
                contextId="GILLES"
                implementation="com.gls.glsplugin.language.GillesContext"/>
        <lang.commenter language="Gilles" implementationClass="com.gls.glsplugin.language.GillesCommenter"/>
    </extensions>
</idea-plugin>